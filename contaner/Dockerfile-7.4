ARG BACK_END
FROM ghcr.io/deck-app/${BACK_END}:v7.4
LABEL maintainer Naba Das <hello@get-deck.com>

# Persistent runtime dependencies
# Example RUN apk add --no-cache php7-openssl php7-sysvmsg php7-curl
RUN apk add --no-cache tar

RUN mkdir -p /app
RUN mkdir -p /var/preview
ARG WP_VERSION
RUN if [ ${username} = nginx ]; then
COPY default.conf /etc/nginx/conf.d/default.conf
COPY default.conf /app/default.conf
RUN curl -o /app/wordpress.tar.gz -fL "https://wordpress.org/wordpress-$WP_VERSION.tar.gz"; \
	tar -xzf /app/wordpress.tar.gz -C /app/; \
	rm /app/wordpress.tar.gz; \
	[ ! -e /app/wordpress/.htaccess ]; \
	{ \
		echo '# BEGIN WordPress'; \
		echo ''; \
		echo 'RewriteEngine On'; \
		echo 'RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]'; \
		echo 'RewriteBase /'; \
		echo 'RewriteRule ^index\.php$ - [L]'; \
		echo 'RewriteCond %{REQUEST_FILENAME} !-f'; \
		echo 'RewriteCond %{REQUEST_FILENAME} !-d'; \
		echo 'RewriteRule . /index.php [L]'; \
		echo ''; \
		echo '# END WordPress'; \
	} > /app/wordpress/.htaccess;

RUN wget -O /var/preview/index.html https://raw.githubusercontent.com/deck-app/stack-preview-screen/main/install/index.html
RUN sed -i "s#{SERVER_ROOT}#/var/preview#g" /etc/nginx/conf.d/default.conf
RUN sed -i "s#{SERVER_ROOT}#/var/www/public#g" /app/default.conf
RUN apk add --no-cache zip

WORKDIR /var/www
#PHP display error enable or disable
COPY php.ini /etc/php7/php.ini
ARG DISPLAY_PHPERROR
RUN if [ ${DISPLAY_PHPERROR} = true ]; then \
sed -i "s#{DISPLAY}#On#g" /etc/php7/php.ini \
;else \
sed -i "s#{DISPLAY}#Off#g" /etc/php7/php.ini \
;fi

#Xdebug enable or disable
ARG XDEBUG
RUN if [ ${XDEBUG} = true ]; then \
apk add php7-pecl-xdebug \
&& echo "zend_extension=xdebug" >> /etc/php7/php.ini \
;fi

COPY docker-entrypoint.sh /docker-entrypoint.sh

ARG INSTALL_ADDITIONAL_EXTENSIONS
RUN if [ -z "$INSTALL_ADDITIONAL_EXTENSIONS" ] ; then \
echo "No additional PHP extensions added" \
;else \
apk add --no-cache ${INSTALL_ADDITIONAL_EXTENSIONS} \
;fi
ARG DB_NAME
ARG DB_USER
ARG DB_PASSWORD
ARG DB_HOST
COPY wp-config.php /app/wordpress/wp-config.php
RUN sed -i "s#{DB_NAME}#${DB_NAME}#g" /app/wordpress/wp-config.php
RUN sed -i "s#{DB_USER}#${DB_USER}#g" /app/wordpress/wp-config.php
RUN sed -i "s#{DB_PASSWORD}#${DB_PASSWORD}#g" /app/wordpress/wp-config.php
RUN sed -i "s#{DB_HOST}#${DB_HOST}#g" /app/wordpress/wp-config.php
RUN sed -i "s#{BACK_END}#${BACK_END}#g" /docker-entrypoint.sh


# Permission denied inside docker container
RUN if [[ ${BACK_END} = nginx]]; then \
    username=nobody \
else \
    username=apache \
;fi
ARG USER_ID
ARG GROUP_ID
RUN if [ ${USER_ID} -gt 0 ]; then \
		apk --no-cache add shadow && \
    	if getent group ${GROUP_ID} ; then usermod -u ${USER_ID} -g ${GROUP_ID} ${username}; else usermod -u ${USER_ID} ${username}; groupmod -g ${GROUP_ID} ${username} ; fi \
	;fi
RUN sed -i "s#{USER_ID}#${USER_ID}#g" /docker-entrypoint.sh
RUN sed -i "s#{GROUP_ID}#${GROUP_ID}#g" /docker-entrypoint.sh

RUN chmod +x /docker-entrypoint.sh
CMD /docker-entrypoint.sh & /sbin/runit-wrapper